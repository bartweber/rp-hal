[package]
edition = "2021"
name = "on-target-tests"
version = "0.1.0"
publish = false

[[test]]
name = "dma_m2m_u8"
harness = false

[[test]]
name = "dma_m2m_u16"
harness = false

[[test]]
name = "dma_m2m_u32"
harness = false

[[test]]
name = "dma_spi_loopback_u8"
harness = false

[[test]]
name = "dma_spi_loopback_u16"
harness = false

[[test]]
name = "dma_dyn"
harness = false

[[test]]
name = "i2c_loopback"
harness = false

[[test]]
name = "i2c_loopback_async"
harness = false

[[test]]
name = "gpio"
harness = false

[dependencies]
#cortex-m = "0.7"
cortex-m = { git = "https://github.com/rust-embedded/cortex-m", branch = "master" }
cortex-m-rt = "0.7"
embedded_hal_0_2 = { package = "embedded-hal", version = "0.2.5", features = [
  "unproven",
] }
embedded-hal = "1.0.0"
embedded-hal-async = "1.0.0"

defmt = "0.3"
defmt-rtt = "0.4"
defmt-test = "0.3.1"
panic-probe = { version = "0.3", features = ["print-defmt"] }

rp2040-hal = { path = "../rp2040-hal", features = [
  "critical-section-impl",
  "defmt",
  "rt",
  "i2c-write-iter",
] }
# Needed to set spi frequencies
fugit = "0.3.6"

rp2040-boot2 = "0.3.0"
critical-section = "1.0.0"
heapless = { version = "0.8.0", features = [
  "portable-atomic-critical-section",
  "defmt-03",
] }
# - `wfe`: we may want to signal between cores with sev
# - `wfe` implies `cortex-m`
nostd_async = { version = "0.6.1", features = ["wfe"] }
futures = { version = "0.3.30", default-features = false, features = [
  "async-await",
] }
i2c-write-iter = { version = "1.0.0", features = ["async"] }
itertools = { version = "0.12.0", default-features = false }
